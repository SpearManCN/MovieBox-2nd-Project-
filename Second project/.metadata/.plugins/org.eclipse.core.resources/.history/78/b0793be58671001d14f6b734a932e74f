package com.naver.erp;

import java.util.HashMap;
import java.util.List;
import java.util.Map;


import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;


@Controller
public class BoardController {
	

	@Autowired
	private BoardQuestionDAO boardQuestionDAO;   
	

	@Autowired
	private BoardFreeDAO boardFreeDAO;   
	
	
	
	
	
	
	@RequestMapping( value="/boardQuestion.do" )
	public ModelAndView boardQuestion(
			BoardSearchDTO boardSearchDTO
		){	
		int boardTotCnt = this.boardQuestionDAO.questionBoardListTotCnt( boardSearchDTO );
		
		Map<String,Integer> pagingMap = Paging.getPagingMap(
				boardSearchDTO.getSelectPageNo( )
				, boardSearchDTO.getRowCntPerPage( )
				, boardTotCnt
		);
		boardSearchDTO.setSelectPageNo((int)pagingMap.get("selectPageNo"));
		boardSearchDTO.setBegin_rowNo((int)pagingMap.get("begin_rowNo"));
		boardSearchDTO.setEnd_rowNo((int)pagingMap.get("end_rowNo"));
		
		List<Map<String,String>> boardList =  this.boardQuestionDAO.getBoardQuestionList(boardSearchDTO);	
		
		ModelAndView mav = new ModelAndView();
		// ModelAndView 객체에 게시판 목록 검색 결과를 저장하기
		mav.addObject(  "boardList" , boardList );
		mav.addObject(  "boardSearchDTO" , boardSearchDTO );
		mav.addObject(  "boardTotCnt" , boardTotCnt );
		mav.addObject(  "pagingMap" , pagingMap );
		mav.addObject(  "selectPageNo" , (int)pagingMap.get("selectPageNo") );
		mav.setViewName("boardQuestion.jsp");
		
		return mav;
	//============================================================
	}	//	boardQuestion() 종료
	//============================================================
	
	// /boardQuestionDetail.do 로 접근하면 호출되는 메소드 
	@RequestMapping( value="/boardQuestionDetail.do" )
	public ModelAndView boardQuestionDetail(
			// "no" 라는 파라미터명의 파라미터값이 저장되는 매개변수 no 선언
			// 상세보기할 게시판 고유 번호가 들어오는 매개변수 선언
			@RequestParam(value="no") int no
			){
		int updateReCount = 0;
		updateReCount = this.boardQuestionDAO.questionUpReCount(no);
		BoardQuestionDTO boardQuestionInfo = this.boardQuestionDAO.getQuestBoard(no);
		
		ModelAndView mav = new ModelAndView();
		mav.addObject(  "boardQuestionInfo" , boardQuestionInfo );
		mav.addObject(  "updateReCount" , updateReCount );
		mav.setViewName("boardQuestionDetail.jsp");
		
		return mav;
	//============================================================
	}	//	boardQuestionDetail() 종료
	//============================================================

	
	
	
	
	
	
	
	
	
	
}